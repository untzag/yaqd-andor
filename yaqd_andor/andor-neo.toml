protocol = "andor-neo"
doc = ""
traits = ["has-mapping", "has-measure-trigger", "is-sensor", "is-daemon"]

[links]
source = "https://gitlab.com/yaq/yaqd-andor"
bugtracker = "https://gitlab.com/yaq/yaqd-andor/-/issues"

[installation]
PyPI = "https://pypi.org/project/yaqd-andor"

[[types]]
type = "enum"
name = "preamp_gain_options"
symbols = [
    "12-bit (high well capacity)",
    "12-bit (low noise)",
    "16-bit (low noise & high well capacity)"
]

[[types]]
type = "enum"
name = "shuttering_modes"
symbols = ["Rolling", "Global"]

[[types]]
type = "enum"
name = "binning_modes"
symbols = ["1x1", "2x2", "3x3", "4x4", "8x8"]


[config]

[config.spurious_noise_filter]
type = "boolean"
doc = "Corrects high value pixels using mean of surrounding pixels."
default = false

[config.static_blemish_correction]
type = "boolean"
default = false

[config.sensor_cooling]
type = "boolean"
doc = "Set whether or not sensor will be cooled."
default = false

[config.aoi_binning]
type = "binning_modes"
doc = """Option to bin pixels both horizontally and vertically. \\
    Default is no binning (1x1)."""
default = "1x1"

[config.aoi_width]
type = ["null", "int"]
doc = """Specify the number of pixel columns to acquire. \\
    Can be no larger than `sensor_width` - (`aoi_left` - 1). \\
    Defaults to use all columns starting from `aoi_left`. \\
    """
default = "__null__"

[config.aoi_left]
type = ["null", "int"]
doc = """Specify left-most pixel column of the AOI. \\
    Defaults to the full left of the camera sensor (column 1). \\
    """
default = "__null__"

[config.aoi_height]
type = ["null", "int"]
doc = """Specify the number of pixel rows to acquire. \\
    Can be no larger than `sensor_height` - (`aoi_top` - 1). \\
    Defaults to use all rows starting from `aoi_top`. \\
    """
default = "__null__"

[config.aoi_top]
type = ["null", "int"]
doc = """Specify the top-most pixel row of the AOI. \\
    Defaults to the top of the camera sensor (1). \\
    """
default = "__null__"

[config.electronic_shuttering_mode]
type = "shuttering_modes"
doc = "'Rolling' or 'Global'"
default = "Rolling"

[config.simple_preamp_gain_control]
type = "preamp_gain_options"
default = "16-bit (low noise & high well capacity)"

[config.exposure_time]
type = "float"
doc = "Camera exposure time (seconds)."
default = 1

[messages]

[messages.get_sensor_info]
doc = "Return a dictionary containing information about the sensor."
response = {'type'= 'map', 'values'= ["int", "float"]}

[messages.get_feature_names]
doc = """Return a list of available SDK features. \\
    Different camera types have different available features. \\
    All features names are snake case (e.g. `sensor_temperature`), \\
    distinct from Pascal case (e.g. SensorTemperature) of the direct SDK. \\
    """
response = {"type"='array', "items"="string"}

[messages.get_feature_value]
doc = "Reads the current value for the specified (snake case) feature name."
request = [{"name"="feature_name", "type"="string"}]
response = ["string", "int", "float", "boolean"]

[messages.get_feature_options]
doc = """Return enumerated options for specified feature name (snake case). \\
    If specified feature is not type `enum`, raises error."""
request = [{"name"="feature_name", "type"="string"}]
response = {"type"="array", "items"="string"}
